/*
 * File Name         : esbuild.config.mjs
 * Description       : Esbuild configuration file
 * Author            : Thibaud Demay (thibaud@demay.dev)
 * Created At        : 20/08/2025 21:59:38
 * ----
 * Last Modified By  : Thibaud Demay (thibaud@demay.dev)
 * Last Modified At  : 25/08/2025 21:24:32
 */


import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { copy } from "esbuild-plugin-copy";
import inlineWorkerPlugin from "esbuild-plugin-inline-worker";
import fs from 'fs';
import path from 'path';

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	write: true,
	external: [
		"sharp",
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2022",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "dist/main.js",
	minify: prod,
	platform: "browser",
	plugins: [
		copy({
		// 	watch: true,
			assets: [
		// 		{
		// 			"from": ["./styles.css"],
		// 			"to": ["./styles.css"]
		// 		},
				{
					"from": ["./manifest.json"],
					"to": ["./manifest.json"]
				}
			],
		}),
		inlineWorkerPlugin(),
		{
      name: 'rename-css',
      setup(build) {
        build.onEnd(() => {
          const mainCss = path.join('dist', 'main.css');
          const stylesCss = path.join('dist', 'styles.css');

          if (fs.existsSync(mainCss)) {
            fs.renameSync(mainCss, stylesCss);
          }
        });
      }
    }
	],
	jsx: "automatic"
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
