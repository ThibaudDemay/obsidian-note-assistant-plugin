import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { copy } from "esbuild-plugin-copy";
import inlineWorkerPlugin from "esbuild-plugin-inline-worker";
import { replace } from "esbuild-plugin-replace";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	write: true,
	external: [
		"sharp",
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2022",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "dist/main.js",
	minify: prod,
	plugins: [
		copy({
			watch: true,
			assets: [
				{
					"from": ["./styles.css"],
					"to": ["./styles.css"]
				},
				{
					"from": ["./manifest.json"],
					"to": ["./manifest.json"]
				}
			],
		}),
		inlineWorkerPlugin(),
		/***
		 * @higgingface/transformers detect Node env but obsidian plugins run in browser
		 * so we need to force @higgingface/transformers to use onnxruntime-web.
		 */
		replace({
      // 'const IS_BROWSER_ENV': 'const IS_BROWSER_ENV = true; //',
      // 'const IS_WEBWORKER_ENV': 'const IS_WEBWORKER_ENV = true; //',
      'const IS_PROCESS_AVAILABLE': 'const IS_PROCESS_AVAILABLE = false; //',
      'const IS_NODE_ENV': 'const IS_NODE_ENV = false; //'
    })
	],
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
